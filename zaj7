Zad 1.

#include <stdio.h>
#include <stdlib.h>

int main()
{
    int tab[100] = {4,2,2,1,3,3,3,1,1,1,1,2,5,2};
    int temp = 1;
    for(int i = 1; i < 100; i++)
    {
        if(tab[i] == tab[i-1])
        {
            temp++;
        }
        else
        {
            printf("%d %d ",temp,tab[i-1]);
            temp = 1;
        }
    }

    return 0;
}

Zad 2. Przypisz do tablicy trzeciej sume odpowiadajaca z tabliby pierwszej i drugiej

#include <stdio.h>
#include <stdlib.h>

void suma(unsigned int n, int* tab1, int* tab2, int* tab3)
{
    int i;
    for(i = 0; i < n; i++)
    {
        tab3[i] = tab1[i] + tab2[i];
        printf("%d ",tab3[i]);
    }
}

int main()
{
    int tab[] = {2,7,1,3};
    int tabb[] = {4,5,2,8};
    int wynik[4];
    suma(4,tab,tabb,wynik);
}

Zad 2b. Maksima

#include <stdio.h>
#include <stdlib.h>

void suma(unsigned int n, int* tab1, int* tab2, int* tab3)
{
    int i;
    for(i = 0; i < n; i++)
    {
        if(tab2[i] > tab1[i])
        {
            tab3[i] = tab2[i];
        }
        else
        {
            tab3[i] = tab1[i];
        }
        printf("%d ", tab3[i]);
    }
}

int main()
{
    int tab[] = {2,7,1,3};
    int tabb[] = {4,5,2,8};
    int wynik[4];
    suma(4,tab,tabb,wynik);
}

Zad 2c. Swap pomiedzy tablicami

#include <stdio.h>
#include <stdlib.h>

void wypisz(unsigned int n, int* tab)
{
    int i;
    for(i = 0; i < n; i++)
    {
        printf("%d\t",tab[i]);
    }
    printf("\n");
}

void zamiana(unsigned int n, int* tab1, int* tab2, int* tab3)
{
    int i;
    int temp;
    for(int i = 0; i < n; i++)
    {
        temp = tab2[i];
        tab2[i] = tab1[i];
        tab1[i] = tab3[i];
        tab3[i] = temp;
    }
}

int main()
{
    int tab[] = {2,7,1,3};
    int tabb[] = {4,5,2,8};
    int tab1[] = {5,8,9,4};
    zamiana(4,tab,tabb,tab1);
    wypisz(4,tab);
    wypisz(4,tabb);
    wypisz(4,tab1);
}

Zad 3. Doklejenie drugiej to pierwszej

#include <stdio.h>
#include <stdlib.h>

void wypisz(unsigned int n, double* tab)
{
    int i;
    for(i = 0; i < n; i++)
    {
        printf("%f\t",tab[i]);
    }
    printf("\n");
}

void doklejenie(unsigned int n, double* tab1, double* tab2, double* tab3)
{
    int i;
    int temp;
    for(int i = 0; i < 2*n; i++)
    {
        if(i<n)
        {
            tab3[i] = tab1[i];
        }
        else
        {
            tab3[i] = tab2[i-n];
        }
    }
}

int main()
{
    double tab[] = {2,7,1,3};
    double tabb[] = {4,5,2,8};
    double tab1[] = {5,8,9,4};
    doklejenie(4,tab,tabb,tab1);
    wypisz(8,tab1);

    return 0;
}

Zad 3b.

#include <stdio.h>
#include <stdlib.h>

void wypisz(unsigned int n, double* tab)
{
    int i;
    for(i = 0; i < n; i++)
    {
        printf("%f\t",tab[i]);
    }
    printf("\n");
}

void doklejenie(unsigned int n, double* tab1, double* tab2, double* tab3)
{
    int i;
    int temp;
    for(int i = 0; i < 2*n; i++)
    {
        if(i % 2 == 0)
        {
            tab3[i] = tab2[i/2];
        }
        else
        {
            tab3[i] = tab1[(i-1)/2];
        }
    }
}

int main()
{
    double tab[] = {2,7,1,3};
    double tabb[] = {4,5,2,8};
    double tab1[] = {5,8,9,4};
    doklejenie(4,tab,tabb,tab1);
    wypisz(8,tab1);

    return 0;
}

Zad 4.

#include <stdio.h>
#include <stdlib.h>

void wypisz(unsigned int n, int* tab)
{
    int i;
    for(i = 0; i < n; i++)
    {
        printf("%d\t",tab[i]);
    }
    printf("\n");
}

int maximum(unsigned int n, int *tab)
{
    int i;
    int max = tab[0];
    for(i = 1; i < n; i++)
    {
       if(tab[i] > max)
       {
           max = tab[i];
       }
    }
    return max;
}

int main()
{
    int tab[] = {6,2,9,1,6,3,8};
    printf("%d",maximum(7,tab));
}

Zad 5.

#include <stdio.h>
#include <stdlib.h>

void wypisz(unsigned int n, int* tab)
{
    int i;
    for(i = 0; i < n; i++)
    {
        printf("%d\t",tab[i]);
    }
    printf("\n");
}

int iloczyn_skalarny(unsigned int n, int *tab1, int *tab2)
{
    int i;
    int S = 0;
    for(i = 0; i < n; i++)
    {
        S = S + tab1[i] * tab2[i];
    }
    return S;
}

int main()
{
    int tab[] = {6,2,9,1,6,3,8};
    int tabb[] = {2,1,3,1,4,5,2};
    printf("%d",iloczyn_skalarny(7,tab,tabb));
}
